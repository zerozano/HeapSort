#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

void max_heapify(int arr[], int n, int i) {
    int largest = i;
    int l = 2 * i + 1;
    int r = 2 * i + 2;
 
    if (l < n && arr[l] > arr[largest])
        largest = l;
 
    if (r < n && arr[r] > arr[largest])
        largest = r;
 
    if (largest != i) {
        int temp = arr[i];
        arr[i] = arr[largest];
        arr[largest] = temp;
        max_heapify(arr, n, largest);
    }
}
 
void build_max_heap(int arr[], int n) {
    for (int i = n / 2 - 1; i >= 0; i--)
        max_heapify(arr, n, i);
}
 
void heapSort(int arr[], int n) {
    build_max_heap(arr, n);
 
    for (int i = n - 1; i >= 0; i--) {
        int temp = arr[0];
        arr[0] = arr[i];
        arr[i] = temp;
 
        max_heapify(arr, i, 0);
    }
}

int main(){
    int n = 13;
    int v[13] = {5, 4, 3 ,2 ,1, 65, 34, 123, 543 , 86, 34 ,575, 453};
    
    heapSort(v, n); 

    return 0;
}
